name: linux-builds

on:
  push:

env:
  OWNER: ${{ github.repository_owner }}
  BUILDKIT_PROGRESS: plain

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true


permissions:
  contents: read
  packages: write

jobs:

  linux:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        file:
          - distribution
          - docker-dind
          - forgejo
          - forgejo-runner
          - github-runner
          - nextcloud
          - roundcube
          - traefik
          - uptime-kuma
          - verdaccio

    env:
      FILE: ${{ matrix.file }}
      IMAGE: ghcr.io/${{ github.repository_owner }}/${{ matrix.file }}

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: imjasonh/setup-crane@31b88efe9de28ae0ffa220711af4b60be9435f6e # v0.4
        with:
          version: v0.20.3 # renovate: datasource=github-releases depName=crane packageName=google/go-containerregistry

      - name: docker-config
        uses: containerbase/internal-tools@c8f78cbc830d1883e695d06e3028136656e70f5b # v3.5.17
        with:
          command: docker-config

      - name: Build the Docker image
        run: docker buildx bake test

      - name: Test run
        run: docker compose --file docker-compose.test.yml run sut
        working-directory: ./linux/${{ env.FILE }}

      - name: Log into registry
        if: github.ref == 'refs/heads/main'
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Publish the Docker image
        if: github.ref == 'refs/heads/main'
        run: docker buildx bake build

      - name: Publish the Docker image tags
        if: github.ref == 'refs/heads/main'
        run: |
          if [ -f push.sh ]; then
            ./push.sh
          fi
        working-directory: ./linux/${{ env.FILE }}

  success:
    needs:
      - linux
    runs-on: ubuntu-latest
    timeout-minutes: 1
    if: always()
    steps:
      - name: Fail for failed or cancelled linux
        if: |
          needs.linux.result == 'failure' ||
          needs.linux.result == 'cancelled'
        run: exit 1
