name: linux-builds

on:
  push:
    branches:
      - main

  pull_request:
  merge_group:

env:
  OWNER: ${{ github.repository_owner }}
  BUILDKIT_PROGRESS: plain

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true


permissions: {}

jobs:

  linux:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    permissions:
      contents: read
      id-token: write
      packages: write

    strategy:
      matrix:
        file:
          - docker-dind
          - forgejo
          - forgejo-runner
          - garage
          - github-runner
          - nextcloud
          - roundcube
          - traefik
          - uptime-kuma
          - verdaccio

    env:
      FILE: ${{ matrix.file }}
      IMAGE: ghcr.io/${{ github.repository_owner }}/${{ matrix.file }}

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: imjasonh/setup-crane@31b88efe9de28ae0ffa220711af4b60be9435f6e # v0.4
        with:
          version: v0.20.6 # renovate: datasource=github-releases depName=crane packageName=google/go-containerregistry

      - uses: sigstore/cosign-installer@faadad0cce49287aee09b3a48701e75088a2c6ad # v4.0.0

      - name: docker-config
        uses: containerbase/internal-tools@fe770ba6b0bf4b72cb2e3e691f6e4e2974d5c80a # v3.14.4
        with:
          command: docker-config

      - name: Build the Docker image
        run: |
          docker buildx bake --metadata-file /tmp/meta.json test
          jq . /tmp/meta.json

      - name: Test run
        run: docker compose --file docker-compose.test.yml run sut
        working-directory: ./linux/${{ env.FILE }}

      - name: Log into registry
        if: github.ref == 'refs/heads/main'
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Publish the Docker image
        if: github.ref == 'refs/heads/main'
        run: |
          docker buildx bake --metadata-file /tmp/meta.json build
          jq . /tmp/meta.json
          digest=$(jq -r '.push_ghcr.["containerimage.digest"]' /tmp/meta.json)
          cosign sign --yes $IMAGE@$digest

      - name: Publish the Docker image tags
        if: github.ref == 'refs/heads/main'
        run: |
          if [ -f push.sh ]; then
            ./push.sh
          fi
        working-directory: ./linux/${{ env.FILE }}

  success-linux:
    needs:
      - linux
    runs-on: ubuntu-latest
    timeout-minutes: 1
    if: always()
    steps:
      - name: Fail for failed or cancelled linux
        if: |
          needs.linux.result == 'failure' ||
          needs.linux.result == 'cancelled'
        run: exit 1
